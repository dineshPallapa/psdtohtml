{"version":3,"sources":["components/Header/Header.module.scss","assets/images/heromansvg.webp","components/HeroSection/HeroSection.module.scss","shared/demoState.js","reducers/rootReducer.js","reducers/demoReducer.js","actions/actionTypes.js","components/Header/Header.js","components/HeroSection/HeroSection.js","components/App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","header","headerLinks","logo","loginButton","__webpack_require__","p","main","captions","estimateHeading","futureHeading","deadlineHeading","viewProject","wrapBox","card","cloneCard","heroImage","demoState","combineReducers","demo","state","arguments","length","undefined","action","type","concat","payload","Header","react_default","a","createElement","className","css","react_router_dom","to","console","log","image","HeroSection","src","alt","store","middlewares","thunk","devToolEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewareEnhancer","applyMiddleware","apply","createStore","RootReducer","ConfigureStore","App","es","components_Header_Header","cssComponent","react_router","exact","path","components_HeroSection_HeroSection","Boolean","location","hostname","match","ReactDOM","render","StrictMode","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.792ef498.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__9pSqX\",\"headerLinks\":\"Header_headerLinks__ijOsO\",\"logo\":\"Header_logo__3JpdI\",\"loginButton\":\"Header_loginButton__1E3PE\"};","module.exports = __webpack_public_path__ + \"static/media/heromansvg.208d8785.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"HeroSection_main__1Tuci\",\"captions\":\"HeroSection_captions__2Vbkw\",\"estimateHeading\":\"HeroSection_estimateHeading__yVty2\",\"futureHeading\":\"HeroSection_futureHeading__3itXU\",\"deadlineHeading\":\"HeroSection_deadlineHeading__ehWX4\",\"viewProject\":\"HeroSection_viewProject__MN7ge\",\"wrapBox\":\"HeroSection_wrapBox__1mijk\",\"card\":\"HeroSection_card__3-yP3\",\"cloneCard\":\"HeroSection_cloneCard__BkDHp\",\"heroImage\":\"HeroSection_heroImage__XeocU\"};","export const demoState = [];\n","import { combineReducers } from 'redux';\nimport { demoReducer } from './demoReducer';\n\nexport default combineReducers({\n  demo: demoReducer\n});\n","import { demoState } from '../shared/demoState';\nimport * as ActionTypes from '../actions/actionTypes';\n\nexport const demoReducer = (state = demoState, action) => {\n  switch (action.type) {\n    case ActionTypes.DemoEvent:\n      return state.concat(action.payload)\n    default:\n      return state;\n  }\n};\n","export const DemoEvent = 'DemoEvent';\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport css from './Header.module.scss';\n\nconst Header = () => {\n  return (\n    <nav className={css.header}>\n      <div className={css.logo}>\n        <h1>Solutions</h1>\n      </div>\n      <ul className={css.headerLinks}>\n        <li><NavLink to=\"/\">Home</NavLink></li>\n        <li><NavLink to=\"/myapps\">MyApps</NavLink></li>\n        <li><NavLink to=\"/blog\">Blog</NavLink></li>\n        <li>\n          <NavLink to=\"/login\">\n            <button className={css.loginButton}>Login</button>\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport css from './HeroSection.module.scss';\nimport image from '../../assets/images/heromansvg.webp';\nconsole.log(image)\n\nconst HeroSection = () => {\n  return (\n    <div className={css.main}>\n      <div className={css.captions}>\n        <h2 className={css.estimateHeading} >Estimate for</h2>\n        <h1 className={css.futureHeading}>Future projects</h1>\n        <h3 className={css.deadlineHeading}>Deadlines & upcoming tasks</h3>\n        <button className={css.viewProject}>View projects</button>\n        <div className={css.wrapBox}>\n          <div className={css.card}>\n            <div className={css.cloneCard}>O</div>\n            <p>Avg watch time1</p>\n            <h3>45.42</h3>\n            <p>+4.48%</p>\n          </div>\n          <div className={css.card}>\n            <div className={css.cloneCard}>O</div>\n            <p>Engagement</p>\n            <h3>45.42</h3>\n            <p>63.10%</p>\n          </div>\n          <div className={css.card}>\n            <div className={css.cloneCard}>O</div>\n            <p>Streams</p>\n            <h3>45425</h3>\n          </div>\n        </div>\n      </div>\n      <div className={css.heroImage}>\n        <img src={image} alt=\"logo\" />\n      </div>\n    </div>\n  )\n}\n\nexport default HeroSection;\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport {ConfigureStore} from '../store/configureStore';\nimport cssComponent from './App.module.scss';\nimport Header from './Header/Header'\nimport HeroSection from './HeroSection/HeroSection';\n\nconst store = ConfigureStore();\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header />\n        <div className={cssComponent.App}>\n          <Switch>\n            <Route exact path=\"/\" >\n              <HeroSection />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport freeze from 'redux-freeze';\nimport RootReducer from '../reducers/rootReducer';\n\nexport const ConfigureStore = () => {\n  const middlewares = [thunk]\n  if (process.env.NODE_ENV !== 'production') {\n    middlewares.push(logger);\n    middlewares.push(freeze);\n  }\n  const devToolEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n  const store = createStore(\n    RootReducer,\n    devToolEnhancers(middlewareEnhancer)\n  );\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'normalize.css';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}